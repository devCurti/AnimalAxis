// <auto-generated />
using System;
using AnimalAxis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimalAxis.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimalAxis.Models.Cor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cor");
                });

            modelBuilder.Entity("AnimalAxis.Models.Nascimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaeId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrevisaoNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("numFilhotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaeId");

                    b.HasIndex("PaiId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Nascimento");
                });

            modelBuilder.Entity("AnimalAxis.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataDoCio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaiId")
                        .HasColumnType("int");

                    b.Property<string>("Pedigree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeriodoDaCruza")
                        .HasColumnType("datetime2");

                    b.Property<int>("RacaId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CorId");

                    b.HasIndex("MaeId");

                    b.HasIndex("PaiId");

                    b.HasIndex("RacaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("AnimalAxis.Models.Raca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Raca");
                });

            modelBuilder.Entity("AnimalAxis.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AnimalAxis.Models.Nascimento", b =>
                {
                    b.HasOne("AnimalAxis.Models.Pet", "Mae")
                        .WithMany("Nascimento")
                        .HasForeignKey("MaeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AnimalAxis.Models.Pet", "Pai")
                        .WithMany()
                        .HasForeignKey("PaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AnimalAxis.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mae");

                    b.Navigation("Pai");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AnimalAxis.Models.Pet", b =>
                {
                    b.HasOne("AnimalAxis.Models.Cor", "Cor")
                        .WithMany("Pets")
                        .HasForeignKey("CorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimalAxis.Models.Pet", "Mae")
                        .WithMany()
                        .HasForeignKey("MaeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AnimalAxis.Models.Pet", "Pai")
                        .WithMany()
                        .HasForeignKey("PaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AnimalAxis.Models.Raca", "Raca")
                        .WithMany("Pets")
                        .HasForeignKey("RacaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimalAxis.Models.Usuario", "Usuario")
                        .WithMany("Pets")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cor");

                    b.Navigation("Mae");

                    b.Navigation("Pai");

                    b.Navigation("Raca");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AnimalAxis.Models.Cor", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("AnimalAxis.Models.Pet", b =>
                {
                    b.Navigation("Nascimento");
                });

            modelBuilder.Entity("AnimalAxis.Models.Raca", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("AnimalAxis.Models.Usuario", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
